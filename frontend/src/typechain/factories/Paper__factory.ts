/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Paper, PaperInterface } from "../Paper";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_ipfsHash",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_review",
        type: "bool",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "addReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getIpfsHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReviews",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "decision",
            type: "bool",
          },
          {
            internalType: "string",
            name: "comment",
            type: "string",
          },
        ],
        internalType: "struct PaperReview[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ipfsHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reviewers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reviews",
    outputs: [
      {
        internalType: "bool",
        name: "decision",
        type: "bool",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600c81526020017f554e4445525f52455649455700000000000000000000000000000000000000008152506000908051906020019062000051929190620001fe565b503480156200005f57600080fd5b506040516200187838038062001878833981810160405281019062000085919062000337565b620000d06040518060400160405280601081526020017f4465706c6f79696e6720612055736572000000000000000000000000000000008152506200013260201b620009fb1760201c565b8160019080519060200190620000e8929190620001fe565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620005d0565b620001d281604051602401620001499190620003d2565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620001d560201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200020c90620004db565b90600052602060002090601f0160209004810192826200023057600085556200027c565b82601f106200024b57805160ff19168380011785556200027c565b828001600101855582156200027c579182015b828111156200027b5782518255916020019190600101906200025e565b5b5090506200028b91906200028f565b5090565b5b80821115620002aa57600081600090555060010162000290565b5090565b6000620002c5620002bf846200041f565b620003f6565b905082815260208101848484011115620002de57600080fd5b620002eb848285620004a5565b509392505050565b6000815190506200030481620005b6565b92915050565b600082601f8301126200031c57600080fd5b81516200032e848260208601620002ae565b91505092915050565b600080604083850312156200034b57600080fd5b600083015167ffffffffffffffff8111156200036657600080fd5b62000374858286016200030a565b92505060206200038785828601620002f3565b9150509250929050565b60006200039e8262000455565b620003aa818562000460565b9350620003bc818560208601620004a5565b620003c781620005a5565b840191505092915050565b60006020820190508181036000830152620003ee818462000391565b905092915050565b60006200040262000415565b905062000410828262000511565b919050565b6000604051905090565b600067ffffffffffffffff8211156200043d576200043c62000576565b5b6200044882620005a5565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006200047e8262000485565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620004c5578082015181840152602081019050620004a8565b83811115620004d5576000848401525b50505050565b60006002820490506001821680620004f457607f821691505b602082108114156200050b576200050a62000547565b5b50919050565b6200051c82620005a5565b810181811067ffffffffffffffff821117156200053e576200053d62000576565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620005c18162000471565b8114620005cd57600080fd5b50565b61129880620005e06000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063893d20e811610066578063893d20e8146101215780638da5cb5b1461013f5780639cc616f61461015d578063c623674f1461018d578063dc9638c7146101ab57610093565b80630755464f146100985780631b1e1324146100c9578063200d2ed2146100e757806323eb096d14610105575b600080fd5b6100b260048036038101906100ad9190610c3d565b6101c9565b6040516100c0929190610f1b565b60405180910390f35b6100d1610282565b6040516100de9190610ef9565b60405180910390f35b6100ef6104d1565b6040516100fc9190610f4b565b60405180910390f35b61011f600480360381019061011a9190610c66565b61055f565b005b61012961084c565b6040516101369190610ede565b60405180910390f35b610147610876565b6040516101549190610ede565b60405180910390f35b61017760048036038101906101729190610cba565b61089c565b6040516101849190610ede565b60405180910390f35b6101956108db565b6040516101a29190610f4b565b60405180910390f35b6101b3610969565b6040516101c09190610f4b565b60405180910390f35b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060010180546101ff906110d3565b80601f016020809104026020016040519081016040528092919081815260200182805461022b906110d3565b80156102785780601f1061024d57610100808354040283529160200191610278565b820191906000526020600020905b81548152906001019060200180831161025b57829003601f168201915b5050505050905082565b6060600060038054905067ffffffffffffffff8111156102cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561030457816020015b6102f1610ad7565b8152602001906001900390816102e95790505b50905060005b6003805490508110156104c9576004600060038381548110610355577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff161515151581526020016001820180546103f0906110d3565b80601f016020809104026020016040519081016040528092919081815260200182805461041c906110d3565b80156104695780601f1061043e57610100808354040283529160200191610469565b820191906000526020600020905b81548152906001019060200180831161044c57829003601f168201915b5050505050815250508282815181106104ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806104c190611136565b91505061030a565b508091505090565b600080546104de906110d3565b80601f016020809104026020016040519081016040528092919081815260200182805461050a906110d3565b80156105575780601f1061052c57610100808354040283529160200191610557565b820191906000526020600020905b81548152906001019060200180831161053a57829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561060e57506040518060400160405280600c81526020017f554e4445525f52455649455700000000000000000000000000000000000000008152508051906020012060006040516106049190610ec7565b6040518091039020145b156108485760006040518060400160405280841515815260200183815250905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010190805190602001906106aa929190610af3565b509050506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000805b6003805490508110156107fd576004600060038381548110610760577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156107ea5781806107e690611136565b9250505b80806107f590611136565b915050610715565b5060028110610845576108446040518060400160405280600981526020017f5055424c49534845440000000000000000000000000000000000000000000000815250610a94565b5b50505b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106108ac57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180546108e8906110d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610914906110d3565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b505050505081565b606060018054610978906110d3565b80601f01602080910402602001604051908101604052809291908181526020018280546109a4906110d3565b80156109f15780601f106109c6576101008083540402835291602001916109f1565b820191906000526020600020905b8154815290600101906020018083116109d457829003601f168201915b5050505050905090565b610a9181604051602401610a0f9190610f4b565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610aae565b50565b8060009080519060200190610aaa929190610af3565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060400160405280600015158152602001606081525090565b828054610aff906110d3565b90600052602060002090601f016020900481019282610b215760008555610b68565b82601f10610b3a57805160ff1916838001178555610b68565b82800160010185558215610b68579182015b82811115610b67578251825591602001919060010190610b4c565b5b509050610b759190610b79565b5090565b5b80821115610b92576000816000905550600101610b7a565b5090565b6000610ba9610ba484610f92565b610f6d565b905082815260208101848484011115610bc157600080fd5b610bcc848285611091565b509392505050565b600081359050610be38161121d565b92915050565b600081359050610bf881611234565b92915050565b600082601f830112610c0f57600080fd5b8135610c1f848260208601610b96565b91505092915050565b600081359050610c378161124b565b92915050565b600060208284031215610c4f57600080fd5b6000610c5d84828501610bd4565b91505092915050565b60008060408385031215610c7957600080fd5b6000610c8785828601610be9565b925050602083013567ffffffffffffffff811115610ca457600080fd5b610cb085828601610bfe565b9150509250929050565b600060208284031215610ccc57600080fd5b6000610cda84828501610c28565b91505092915050565b6000610cef8383610e8a565b905092915050565b610d0081611049565b82525050565b6000610d1182610fe8565b610d1b818561100b565b935083602082028501610d2d85610fc3565b8060005b85811015610d695784840389528151610d4a8582610ce3565b9450610d5583610ffe565b925060208a01995050600181019050610d31565b50829750879550505050505092915050565b610d848161105b565b82525050565b610d938161105b565b82525050565b60008154610da6816110d3565b610db0818661101c565b94506001821660008114610dcb5760018114610ddc57610e0f565b60ff19831686528186019350610e0f565b610de585610fd3565b60005b83811015610e0757815481890152600182019150602081019050610de8565b838801955050505b50505092915050565b6000610e2382610ff3565b610e2d8185611027565b9350610e3d8185602086016110a0565b610e468161120c565b840191505092915050565b6000610e5c82610ff3565b610e668185611038565b9350610e768185602086016110a0565b610e7f8161120c565b840191505092915050565b6000604083016000830151610ea26000860182610d7b565b5060208301518482036020860152610eba8282610e18565b9150508091505092915050565b6000610ed38284610d99565b915081905092915050565b6000602082019050610ef36000830184610cf7565b92915050565b60006020820190508181036000830152610f138184610d06565b905092915050565b6000604082019050610f306000830185610d8a565b8181036020830152610f428184610e51565b90509392505050565b60006020820190508181036000830152610f658184610e51565b905092915050565b6000610f77610f88565b9050610f838282611105565b919050565b6000604051905090565b600067ffffffffffffffff821115610fad57610fac6111dd565b5b610fb68261120c565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061105482611067565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156110be5780820151818401526020810190506110a3565b838111156110cd576000848401525b50505050565b600060028204905060018216806110eb57607f821691505b602082108114156110ff576110fe6111ae565b5b50919050565b61110e8261120c565b810181811067ffffffffffffffff8211171561112d5761112c6111dd565b5b80604052505050565b600061114182611087565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111745761117361117f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61122681611049565b811461123157600080fd5b50565b61123d8161105b565b811461124857600080fd5b50565b61125481611087565b811461125f57600080fd5b5056fea2646970667358221220fd724c73507ddb91660e75cae6030427c8e5a16664fcaa322819191b5c11a80064736f6c63430008040033";

export class Paper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ipfsHash: string,
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Paper> {
    return super.deploy(_ipfsHash, _address, overrides || {}) as Promise<Paper>;
  }
  getDeployTransaction(
    _ipfsHash: string,
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ipfsHash, _address, overrides || {});
  }
  attach(address: string): Paper {
    return super.attach(address) as Paper;
  }
  connect(signer: Signer): Paper__factory {
    return super.connect(signer) as Paper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaperInterface {
    return new utils.Interface(_abi) as PaperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Paper {
    return new Contract(address, _abi, signerOrProvider) as Paper;
  }
}
